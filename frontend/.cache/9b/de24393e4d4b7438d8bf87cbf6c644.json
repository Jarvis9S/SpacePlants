{"id":"reducers/plant.js","dependencies":[{"name":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/package.json","includedInParent":true,"mtime":1635189577884},{"name":"../actions/types.js","loc":{"line":1,"column":22},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/reducers/plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/actions/types.js"},{"name":"./fetchStates.js","loc":{"line":2,"column":24},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/reducers/plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/reducers/fetchStates.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _types = require(\"../actions/types.js\");\n\nvar _fetchStates = _interopRequireDefault(require(\"./fetchStates.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar DEFAULT_PLANT = {\n  travelId: \"\",\n  plantId: \"\",\n  nickname: \"\",\n  collectdate: \"\",\n  traits: []\n};\n\nvar plantReducer = function plantReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_PLANT;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _types.PLANT.FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: _fetchStates.default.fetching\n      });\n\n    case _types.PLANT.FETCH_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: _fetchStates.default.error,\n        message: action.message\n      });\n\n    case _types.PLANT.FETCH_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: _fetchStates.default.success\n      }, action.plant);\n\n    default:\n      return state;\n  }\n};\n\nvar _default = plantReducer;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"reducers/plant.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"reducers/plant.js","original":{"line":2,"column":0}},{"generated":{"line":20,"column":0},"source":"reducers/plant.js","original":{"line":4,"column":0}},{"name":"DEFAULT_PLANT","generated":{"line":20,"column":4},"source":"reducers/plant.js","original":{"line":4,"column":6}},{"generated":{"line":20,"column":17},"source":"reducers/plant.js","original":{"line":4,"column":19}},{"generated":{"line":20,"column":20},"source":"reducers/plant.js","original":{"line":4,"column":22}},{"name":"travelId","generated":{"line":21,"column":0},"source":"reducers/plant.js","original":{"line":5,"column":4}},{"name":"travelId","generated":{"line":21,"column":2},"source":"reducers/plant.js","original":{"line":5,"column":4}},{"generated":{"line":21,"column":10},"source":"reducers/plant.js","original":{"line":5,"column":12}},{"generated":{"line":21,"column":12},"source":"reducers/plant.js","original":{"line":5,"column":14}},{"generated":{"line":21,"column":14},"source":"reducers/plant.js","original":{"line":4,"column":22}},{"name":"plantId","generated":{"line":22,"column":0},"source":"reducers/plant.js","original":{"line":6,"column":4}},{"name":"plantId","generated":{"line":22,"column":2},"source":"reducers/plant.js","original":{"line":6,"column":4}},{"generated":{"line":22,"column":9},"source":"reducers/plant.js","original":{"line":6,"column":11}},{"generated":{"line":22,"column":11},"source":"reducers/plant.js","original":{"line":6,"column":13}},{"generated":{"line":22,"column":13},"source":"reducers/plant.js","original":{"line":4,"column":22}},{"name":"nickname","generated":{"line":23,"column":0},"source":"reducers/plant.js","original":{"line":7,"column":4}},{"name":"nickname","generated":{"line":23,"column":2},"source":"reducers/plant.js","original":{"line":7,"column":4}},{"generated":{"line":23,"column":10},"source":"reducers/plant.js","original":{"line":7,"column":12}},{"generated":{"line":23,"column":12},"source":"reducers/plant.js","original":{"line":7,"column":14}},{"generated":{"line":23,"column":14},"source":"reducers/plant.js","original":{"line":4,"column":22}},{"name":"collectdate","generated":{"line":24,"column":0},"source":"reducers/plant.js","original":{"line":8,"column":4}},{"name":"collectdate","generated":{"line":24,"column":2},"source":"reducers/plant.js","original":{"line":8,"column":4}},{"generated":{"line":24,"column":13},"source":"reducers/plant.js","original":{"line":8,"column":15}},{"generated":{"line":24,"column":15},"source":"reducers/plant.js","original":{"line":8,"column":17}},{"generated":{"line":24,"column":17},"source":"reducers/plant.js","original":{"line":4,"column":22}},{"name":"traits","generated":{"line":25,"column":0},"source":"reducers/plant.js","original":{"line":9,"column":4}},{"name":"traits","generated":{"line":25,"column":2},"source":"reducers/plant.js","original":{"line":9,"column":4}},{"generated":{"line":25,"column":8},"source":"reducers/plant.js","original":{"line":9,"column":10}},{"generated":{"line":25,"column":10},"source":"reducers/plant.js","original":{"line":9,"column":12}},{"generated":{"line":26,"column":0},"source":"reducers/plant.js","original":{"line":4,"column":22}},{"generated":{"line":26,"column":1},"source":"reducers/plant.js","original":{"line":4,"column":0}},{"generated":{"line":28,"column":0},"source":"reducers/plant.js","original":{"line":12,"column":0}},{"name":"plantReducer","generated":{"line":28,"column":4},"source":"reducers/plant.js","original":{"line":12,"column":6}},{"generated":{"line":28,"column":16},"source":"reducers/plant.js","original":{"line":12,"column":18}},{"generated":{"line":28,"column":19},"source":"reducers/plant.js","original":{"line":12,"column":21}},{"name":"plantReducer","generated":{"line":28,"column":28},"source":"reducers/plant.js","original":{"line":12,"column":6}},{"generated":{"line":28,"column":40},"source":"reducers/plant.js","original":{"line":12,"column":21}},{"generated":{"line":28,"column":43},"source":"reducers/plant.js","original":{"line":12,"column":56}},{"generated":{"line":29,"column":0},"source":"reducers/plant.js","original":{"line":12,"column":56}},{"name":"state","generated":{"line":29,"column":6},"source":"reducers/plant.js","original":{"line":12,"column":22}},{"generated":{"line":29,"column":11},"source":"reducers/plant.js","original":{"line":12,"column":56}},{"name":"DEFAULT_PLANT","generated":{"line":29,"column":82},"source":"reducers/plant.js","original":{"line":12,"column":30}},{"generated":{"line":29,"column":95},"source":"reducers/plant.js","original":{"line":12,"column":56}},{"generated":{"line":30,"column":0},"source":"reducers/plant.js","original":{"line":12,"column":56}},{"name":"action","generated":{"line":30,"column":6},"source":"reducers/plant.js","original":{"line":12,"column":45}},{"generated":{"line":30,"column":12},"source":"reducers/plant.js","original":{"line":12,"column":56}},{"generated":{"line":32,"column":0},"source":"reducers/plant.js","original":{"line":13,"column":4}},{"name":"action","generated":{"line":32,"column":10},"source":"reducers/plant.js","original":{"line":13,"column":11}},{"generated":{"line":32,"column":16},"source":"reducers/plant.js","original":{"line":13,"column":17}},{"name":"type","generated":{"line":32,"column":17},"source":"reducers/plant.js","original":{"line":13,"column":18}},{"generated":{"line":32,"column":21},"source":"reducers/plant.js","original":{"line":13,"column":4}},{"generated":{"line":33,"column":0},"source":"reducers/plant.js","original":{"line":14,"column":8}},{"name":"PLANT","generated":{"line":33,"column":9},"source":"reducers/plant.js","original":{"line":14,"column":13}},{"name":"FETCH","generated":{"line":33,"column":22},"source":"reducers/plant.js","original":{"line":14,"column":19}},{"generated":{"line":33,"column":27},"source":"reducers/plant.js","original":{"line":14,"column":8}},{"generated":{"line":34,"column":0},"source":"reducers/plant.js","original":{"line":15,"column":12}},{"name":"state","generated":{"line":34,"column":45},"source":"reducers/plant.js","original":{"line":15,"column":24}},{"generated":{"line":34,"column":50},"source":"reducers/plant.js","original":{"line":15,"column":12}},{"name":"status","generated":{"line":35,"column":0},"source":"reducers/plant.js","original":{"line":15,"column":31}},{"name":"status","generated":{"line":35,"column":8},"source":"reducers/plant.js","original":{"line":15,"column":31}},{"generated":{"line":35,"column":14},"source":"reducers/plant.js","original":{"line":15,"column":37}},{"name":"fetchStates","generated":{"line":35,"column":16},"source":"reducers/plant.js","original":{"line":15,"column":39}},{"name":"fetching","generated":{"line":35,"column":37},"source":"reducers/plant.js","original":{"line":15,"column":51}},{"generated":{"line":36,"column":0},"source":"reducers/plant.js","original":{"line":15,"column":12}},{"generated":{"line":38,"column":0},"source":"reducers/plant.js","original":{"line":16,"column":8}},{"name":"PLANT","generated":{"line":38,"column":9},"source":"reducers/plant.js","original":{"line":16,"column":13}},{"name":"FETCH_ERROR","generated":{"line":38,"column":22},"source":"reducers/plant.js","original":{"line":16,"column":19}},{"generated":{"line":38,"column":33},"source":"reducers/plant.js","original":{"line":16,"column":8}},{"generated":{"line":39,"column":0},"source":"reducers/plant.js","original":{"line":17,"column":12}},{"name":"state","generated":{"line":39,"column":45},"source":"reducers/plant.js","original":{"line":17,"column":24}},{"generated":{"line":39,"column":50},"source":"reducers/plant.js","original":{"line":17,"column":12}},{"name":"status","generated":{"line":40,"column":0},"source":"reducers/plant.js","original":{"line":17,"column":31}},{"name":"status","generated":{"line":40,"column":8},"source":"reducers/plant.js","original":{"line":17,"column":31}},{"generated":{"line":40,"column":14},"source":"reducers/plant.js","original":{"line":17,"column":37}},{"name":"fetchStates","generated":{"line":40,"column":16},"source":"reducers/plant.js","original":{"line":17,"column":39}},{"name":"error","generated":{"line":40,"column":37},"source":"reducers/plant.js","original":{"line":17,"column":51}},{"generated":{"line":40,"column":42},"source":"reducers/plant.js","original":{"line":17,"column":12}},{"name":"message","generated":{"line":41,"column":0},"source":"reducers/plant.js","original":{"line":17,"column":58}},{"name":"message","generated":{"line":41,"column":8},"source":"reducers/plant.js","original":{"line":17,"column":58}},{"generated":{"line":41,"column":15},"source":"reducers/plant.js","original":{"line":17,"column":65}},{"name":"action","generated":{"line":41,"column":17},"source":"reducers/plant.js","original":{"line":17,"column":67}},{"generated":{"line":41,"column":23},"source":"reducers/plant.js","original":{"line":17,"column":73}},{"name":"message","generated":{"line":41,"column":24},"source":"reducers/plant.js","original":{"line":17,"column":74}},{"generated":{"line":42,"column":0},"source":"reducers/plant.js","original":{"line":17,"column":12}},{"generated":{"line":44,"column":0},"source":"reducers/plant.js","original":{"line":18,"column":8}},{"name":"PLANT","generated":{"line":44,"column":9},"source":"reducers/plant.js","original":{"line":18,"column":13}},{"name":"FETCH_SUCCESS","generated":{"line":44,"column":22},"source":"reducers/plant.js","original":{"line":18,"column":19}},{"generated":{"line":44,"column":35},"source":"reducers/plant.js","original":{"line":18,"column":8}},{"generated":{"line":45,"column":0},"source":"reducers/plant.js","original":{"line":19,"column":12}},{"name":"state","generated":{"line":45,"column":45},"source":"reducers/plant.js","original":{"line":19,"column":24}},{"generated":{"line":45,"column":50},"source":"reducers/plant.js","original":{"line":19,"column":12}},{"name":"status","generated":{"line":46,"column":0},"source":"reducers/plant.js","original":{"line":19,"column":31}},{"name":"status","generated":{"line":46,"column":8},"source":"reducers/plant.js","original":{"line":19,"column":31}},{"generated":{"line":46,"column":14},"source":"reducers/plant.js","original":{"line":19,"column":37}},{"name":"fetchStates","generated":{"line":46,"column":16},"source":"reducers/plant.js","original":{"line":19,"column":39}},{"name":"success","generated":{"line":46,"column":37},"source":"reducers/plant.js","original":{"line":19,"column":51}},{"generated":{"line":47,"column":0},"source":"reducers/plant.js","original":{"line":19,"column":12}},{"name":"action","generated":{"line":47,"column":9},"source":"reducers/plant.js","original":{"line":19,"column":63}},{"generated":{"line":47,"column":15},"source":"reducers/plant.js","original":{"line":19,"column":69}},{"name":"plant","generated":{"line":47,"column":16},"source":"reducers/plant.js","original":{"line":19,"column":70}},{"generated":{"line":47,"column":21},"source":"reducers/plant.js","original":{"line":19,"column":12}},{"generated":{"line":49,"column":0},"source":"reducers/plant.js","original":{"line":20,"column":8}},{"generated":{"line":50,"column":0},"source":"reducers/plant.js","original":{"line":21,"column":12}},{"name":"state","generated":{"line":50,"column":13},"source":"reducers/plant.js","original":{"line":21,"column":19}},{"generated":{"line":50,"column":18},"source":"reducers/plant.js","original":{"line":21,"column":12}},{"generated":{"line":51,"column":0},"source":"reducers/plant.js","original":{"line":13,"column":4}},{"generated":{"line":52,"column":0},"source":"reducers/plant.js","original":{"line":23,"column":1}},{"generated":{"line":52,"column":1},"source":"reducers/plant.js","original":{"line":12,"column":0}},{"name":"plantReducer","generated":{"line":54,"column":15},"source":"reducers/plant.js","original":{"line":25,"column":15}}],"sources":{"reducers/plant.js":"import { PLANT } from \"../actions/types.js\";\nimport fetchStates from \"./fetchStates.js\";\n\nconst DEFAULT_PLANT = {\n    travelId: \"\",\n    plantId: \"\",\n    nickname: \"\",\n    collectdate: \"\",\n    traits: []\n};\n\nconst plantReducer = (state = DEFAULT_PLANT, action) => {\n    switch(action.type) {\n        case PLANT.FETCH:\n            return { ...state, status: fetchStates.fetching }\n        case PLANT.FETCH_ERROR:\n            return { ...state, status: fetchStates.error, message: action.message }\n        case PLANT.FETCH_SUCCESS:\n            return { ...state, status: fetchStates.success, ...action.plant };\n        default:\n            return state;\n    }\n}\n\nexport default plantReducer;"},"lineCount":null}},"error":null,"hash":"8dee0bba11c9bc8eb3971ef1c7d8f454","cacheData":{"env":{}}}