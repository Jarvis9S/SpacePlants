{"id":"components/Plant.js","dependencies":[{"name":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/package.json","includedInParent":true,"mtime":1635189577884},{"name":"react","loc":{"line":1,"column":31},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/components/Plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/node_modules/react/index.js"},{"name":"react-redux","loc":{"line":2,"column":24},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/components/Plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/node_modules/react-redux/es/index.js"},{"name":"../actions/plant.js","loc":{"line":3,"column":27},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/components/Plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/actions/plant.js"},{"name":"react-bootstrap","loc":{"line":4,"column":23},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/components/Plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/node_modules/react-bootstrap/esm/index.js"},{"name":"./PlantAvatar.js","loc":{"line":5,"column":24},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/components/Plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/components/PlantAvatar.js"},{"name":"../reducers/fetchStates.js","loc":{"line":6,"column":24},"parent":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/components/Plant.js","resolved":"/Users/javier/Documents/GitHub/SpacePlantGatherer/frontend/src/reducers/fetchStates.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _plant = require(\"../actions/plant.js\");\n\nvar _reactBootstrap = require(\"react-bootstrap\");\n\nvar _PlantAvatar = _interopRequireDefault(require(\"./PlantAvatar.js\"));\n\nvar _fetchStates = _interopRequireDefault(require(\"../reducers/fetchStates.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Plant = /*#__PURE__*/function (_Component) {\n  _inherits(Plant, _Component);\n\n  var _super = _createSuper(Plant);\n\n  function Plant() {\n    _classCallCheck(this, Plant);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Plant, [{\n    key: \"render\",\n    value: function render() {\n      var plant = this.props.plant;\n\n      if (plant.status === _fetchStates.default.error) {\n        return /*#__PURE__*/_react.default.createElement(\"div\", null, plant.message);\n      }\n\n      return /*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(_reactBootstrap.Button, {\n        onClick: this.props.fetchPlant\n      }, \"Harvest a plant\"), /*#__PURE__*/_react.default.createElement(_PlantAvatar.default, {\n        plant: this.props.plant\n      }));\n    }\n  }]);\n\n  return Plant;\n}(_react.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var plant = state.plant;\n  return {\n    plant: plant\n  };\n};\n\nvar componentConnector = (0, _reactRedux.connect)(mapStateToProps, {\n  fetchPlant: _plant.fetchPlant\n});\n\nvar _default = componentConnector(Plant);\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"components/Plant.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"components/Plant.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"components/Plant.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"components/Plant.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"components/Plant.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"components/Plant.js","original":{"line":6,"column":0}},{"name":"Plant","generated":{"line":48,"column":4},"source":"components/Plant.js","original":{"line":8,"column":6}},{"generated":{"line":61,"column":11},"source":"components/Plant.js","original":{"line":10,"column":4}},{"generated":{"line":61,"column":29},"source":"components/Plant.js","original":{"line":10,"column":13}},{"generated":{"line":62,"column":0},"source":"components/Plant.js","original":{"line":12,"column":8}},{"name":"plant","generated":{"line":62,"column":10},"source":"components/Plant.js","original":{"line":12,"column":16}},{"generated":{"line":62,"column":15},"source":"components/Plant.js","original":{"line":12,"column":8}},{"generated":{"line":62,"column":18},"source":"components/Plant.js","original":{"line":12,"column":26}},{"name":"props","generated":{"line":62,"column":23},"source":"components/Plant.js","original":{"line":12,"column":31}},{"generated":{"line":62,"column":28},"source":"components/Plant.js","original":{"line":12,"column":8}},{"name":"plant","generated":{"line":62,"column":29},"source":"components/Plant.js","original":{"line":12,"column":16}},{"generated":{"line":62,"column":34},"source":"components/Plant.js","original":{"line":12,"column":8}},{"generated":{"line":64,"column":0},"source":"components/Plant.js","original":{"line":14,"column":8}},{"name":"plant","generated":{"line":64,"column":10},"source":"components/Plant.js","original":{"line":14,"column":12}},{"generated":{"line":64,"column":15},"source":"components/Plant.js","original":{"line":14,"column":17}},{"name":"status","generated":{"line":64,"column":16},"source":"components/Plant.js","original":{"line":14,"column":18}},{"generated":{"line":64,"column":22},"source":"components/Plant.js","original":{"line":14,"column":12}},{"name":"fetchStates","generated":{"line":64,"column":27},"source":"components/Plant.js","original":{"line":14,"column":29}},{"name":"error","generated":{"line":64,"column":48},"source":"components/Plant.js","original":{"line":14,"column":41}},{"generated":{"line":64,"column":53},"source":"components/Plant.js","original":{"line":14,"column":8}},{"generated":{"line":64,"column":55},"source":"components/Plant.js","original":{"line":14,"column":48}},{"generated":{"line":65,"column":0},"source":"components/Plant.js","original":{"line":15,"column":12}},{"generated":{"line":65,"column":28},"source":"components/Plant.js","original":{"line":15,"column":19}},{"name":"plant","generated":{"line":65,"column":70},"source":"components/Plant.js","original":{"line":15,"column":26}},{"generated":{"line":65,"column":75},"source":"components/Plant.js","original":{"line":15,"column":31}},{"name":"message","generated":{"line":65,"column":76},"source":"components/Plant.js","original":{"line":15,"column":32}},{"generated":{"line":65,"column":83},"source":"components/Plant.js","original":{"line":15,"column":19}},{"generated":{"line":65,"column":84},"source":"components/Plant.js","original":{"line":15,"column":12}},{"generated":{"line":66,"column":0},"source":"components/Plant.js","original":{"line":16,"column":9}},{"generated":{"line":68,"column":0},"source":"components/Plant.js","original":{"line":18,"column":8}},{"generated":{"line":68,"column":26},"source":"components/Plant.js","original":{"line":19,"column":8}},{"generated":{"line":68,"column":81},"source":"components/Plant.js","original":{"line":20,"column":12}},{"generated":{"line":68,"column":110},"source":"components/Plant.js","original":{"line":20,"column":13}},{"generated":{"line":68,"column":132},"source":"components/Plant.js","original":{"line":20,"column":12}},{"generated":{"line":69,"column":0},"source":"components/Plant.js","original":{"line":20,"column":20}},{"generated":{"line":69,"column":8},"source":"components/Plant.js","original":{"line":20,"column":20}},{"generated":{"line":69,"column":15},"source":"components/Plant.js","original":{"line":20,"column":27}},{"generated":{"line":69,"column":17},"source":"components/Plant.js","original":{"line":20,"column":30}},{"name":"props","generated":{"line":69,"column":22},"source":"components/Plant.js","original":{"line":20,"column":35}},{"generated":{"line":69,"column":27},"source":"components/Plant.js","original":{"line":20,"column":30}},{"name":"fetchPlant","generated":{"line":69,"column":28},"source":"components/Plant.js","original":{"line":20,"column":41}},{"generated":{"line":70,"column":0},"source":"components/Plant.js","original":{"line":20,"column":12}},{"generated":{"line":70,"column":27},"source":"components/Plant.js","original":{"line":19,"column":8}},{"generated":{"line":70,"column":42},"source":"components/Plant.js","original":{"line":21,"column":12}},{"generated":{"line":70,"column":71},"source":"components/Plant.js","original":{"line":21,"column":13}},{"generated":{"line":70,"column":91},"source":"components/Plant.js","original":{"line":21,"column":12}},{"generated":{"line":71,"column":0},"source":"components/Plant.js","original":{"line":21,"column":25}},{"generated":{"line":71,"column":8},"source":"components/Plant.js","original":{"line":21,"column":25}},{"generated":{"line":71,"column":13},"source":"components/Plant.js","original":{"line":21,"column":30}},{"generated":{"line":71,"column":15},"source":"components/Plant.js","original":{"line":21,"column":33}},{"name":"props","generated":{"line":71,"column":20},"source":"components/Plant.js","original":{"line":21,"column":38}},{"generated":{"line":71,"column":25},"source":"components/Plant.js","original":{"line":21,"column":33}},{"name":"plant","generated":{"line":71,"column":26},"source":"components/Plant.js","original":{"line":21,"column":44}},{"generated":{"line":72,"column":0},"source":"components/Plant.js","original":{"line":21,"column":12}},{"generated":{"line":72,"column":8},"source":"components/Plant.js","original":{"line":19,"column":8}},{"generated":{"line":72,"column":9},"source":"components/Plant.js","original":{"line":18,"column":8}},{"generated":{"line":73,"column":0},"source":"components/Plant.js","original":{"line":24,"column":5}},{"name":"Component","generated":{"line":77,"column":2},"source":"components/Plant.js","original":{"line":8,"column":20}},{"generated":{"line":79,"column":0},"source":"components/Plant.js","original":{"line":27,"column":0}},{"name":"mapStateToProps","generated":{"line":79,"column":4},"source":"components/Plant.js","original":{"line":27,"column":6}},{"generated":{"line":79,"column":19},"source":"components/Plant.js","original":{"line":27,"column":21}},{"generated":{"line":79,"column":22},"source":"components/Plant.js","original":{"line":27,"column":24}},{"name":"mapStateToProps","generated":{"line":79,"column":31},"source":"components/Plant.js","original":{"line":27,"column":6}},{"generated":{"line":79,"column":46},"source":"components/Plant.js","original":{"line":27,"column":24}},{"name":"state","generated":{"line":79,"column":47},"source":"components/Plant.js","original":{"line":27,"column":25}},{"generated":{"line":79,"column":52},"source":"components/Plant.js","original":{"line":27,"column":24}},{"generated":{"line":79,"column":54},"source":"components/Plant.js","original":{"line":27,"column":35}},{"generated":{"line":80,"column":0},"source":"components/Plant.js","original":{"line":28,"column":4}},{"name":"plant","generated":{"line":80,"column":6},"source":"components/Plant.js","original":{"line":28,"column":10}},{"generated":{"line":80,"column":11},"source":"components/Plant.js","original":{"line":28,"column":15}},{"name":"state","generated":{"line":80,"column":14},"source":"components/Plant.js","original":{"line":28,"column":18}},{"generated":{"line":80,"column":19},"source":"components/Plant.js","original":{"line":28,"column":23}},{"name":"plant","generated":{"line":80,"column":20},"source":"components/Plant.js","original":{"line":28,"column":24}},{"generated":{"line":80,"column":25},"source":"components/Plant.js","original":{"line":28,"column":4}},{"generated":{"line":81,"column":0},"source":"components/Plant.js","original":{"line":29,"column":4}},{"generated":{"line":81,"column":9},"source":"components/Plant.js","original":{"line":29,"column":11}},{"name":"plant","generated":{"line":82,"column":0},"source":"components/Plant.js","original":{"line":29,"column":13}},{"name":"plant","generated":{"line":82,"column":4},"source":"components/Plant.js","original":{"line":29,"column":13}},{"generated":{"line":82,"column":9},"source":"components/Plant.js","original":{"line":29,"column":18}},{"name":"plant","generated":{"line":82,"column":11},"source":"components/Plant.js","original":{"line":29,"column":13}},{"generated":{"line":83,"column":0},"source":"components/Plant.js","original":{"line":29,"column":11}},{"generated":{"line":83,"column":3},"source":"components/Plant.js","original":{"line":29,"column":4}},{"generated":{"line":84,"column":0},"source":"components/Plant.js","original":{"line":30,"column":1}},{"generated":{"line":84,"column":1},"source":"components/Plant.js","original":{"line":27,"column":0}},{"generated":{"line":86,"column":0},"source":"components/Plant.js","original":{"line":32,"column":0}},{"name":"componentConnector","generated":{"line":86,"column":4},"source":"components/Plant.js","original":{"line":32,"column":6}},{"generated":{"line":86,"column":22},"source":"components/Plant.js","original":{"line":32,"column":24}},{"generated":{"line":86,"column":25},"source":"components/Plant.js","original":{"line":32,"column":27}},{"name":"mapStateToProps","generated":{"line":86,"column":50},"source":"components/Plant.js","original":{"line":33,"column":4}},{"generated":{"line":86,"column":65},"source":"components/Plant.js","original":{"line":32,"column":27}},{"generated":{"line":86,"column":67},"source":"components/Plant.js","original":{"line":34,"column":4}},{"name":"fetchPlant","generated":{"line":87,"column":0},"source":"components/Plant.js","original":{"line":34,"column":6}},{"name":"fetchPlant","generated":{"line":87,"column":2},"source":"components/Plant.js","original":{"line":34,"column":6}},{"generated":{"line":87,"column":12},"source":"components/Plant.js","original":{"line":34,"column":16}},{"name":"fetchPlant","generated":{"line":87,"column":14},"source":"components/Plant.js","original":{"line":34,"column":6}},{"generated":{"line":88,"column":0},"source":"components/Plant.js","original":{"line":34,"column":4}},{"generated":{"line":88,"column":1},"source":"components/Plant.js","original":{"line":32,"column":27}},{"generated":{"line":88,"column":2},"source":"components/Plant.js","original":{"line":32,"column":0}},{"name":"componentConnector","generated":{"line":90,"column":15},"source":"components/Plant.js","original":{"line":37,"column":15}},{"generated":{"line":90,"column":33},"source":"components/Plant.js","original":{"line":37,"column":33}},{"name":"Plant","generated":{"line":90,"column":34},"source":"components/Plant.js","original":{"line":37,"column":34}},{"generated":{"line":90,"column":39},"source":"components/Plant.js","original":{"line":37,"column":33}}],"sources":{"components/Plant.js":"import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPlant } from \"../actions/plant.js\"\nimport { Button } from \"react-bootstrap\";\nimport PlantAvatar from \"./PlantAvatar.js\";\nimport fetchStates from \"../reducers/fetchStates.js\";\n\nclass Plant extends Component {\n\n    render() {\n\n        const { plant } = this.props;\n\n        if (plant.status === fetchStates.error) {\n            return <div>{ plant.message }</div>\n        }\n\n        return (\n        <div>\n            <Button onClick={ this.props.fetchPlant }>Harvest a plant</Button>\n            <PlantAvatar plant={ this.props.plant} />\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const plant = state.plant;\n    return { plant };\n};\n\nconst componentConnector = connect(\n    mapStateToProps, \n    { fetchPlant }\n    );\n\nexport default componentConnector(Plant);"},"lineCount":null}},"error":null,"hash":"a1dd0adb308e0d672a13ac0da34bda88","cacheData":{"env":{}}}